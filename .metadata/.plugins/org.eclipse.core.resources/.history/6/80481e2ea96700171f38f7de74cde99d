//import java.io.FileOutputStream;
//import java.util.StringTokenizer;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import org.apache.commons.net.io.Util;
import org.apache.commons.net.telnet.TelnetClient;

public class DeviceRemoteConnection {
    public static void main(InputStream command) {
        TelnetClient telnet;
        telnet = new TelnetClient();
        try {
            telnet.connect("10.63.10.222", 23);
            byte[] cmd = "root".getBytes();
            telnet.getOutputStream().write(cmd);
            telnet.getOutputStream().flush();
        } catch (IOException e) {
            e.printStackTrace();
            System.exit(1);
        }
        readWrite(telnet.getInputStream(), telnet.getOutputStream(), System.in, System.out);
        try {
            telnet.disconnect();
        } catch (IOException e) {
            e.printStackTrace();
            System.exit(1);
        }
        System.exit(0);
    }

    public static final void readWrite(final InputStream remoteInput, final OutputStream remoteOutput,
                                       final InputStream localInput, final OutputStream localOutput){
        Thread reader, writer;
        reader = new Thread(){
            @Override
            public void run(){
                int ch;
                try{
                    while (!interrupted() && (ch = localInput.read()) != -1){
                        remoteOutput.write(ch);
                        remoteOutput.flush();
                    }
                }catch (IOException e){
                    e.printStackTrace();
                }
            }
        };
        writer = new Thread(){
            @Override
            public void run(){
                try{
                    Util.copyStream(remoteInput, localOutput);
                }catch (IOException e){
                    e.printStackTrace();
                    System.exit(1);
                }
            }
        };
        writer.setPriority(Thread.currentThread().getPriority() + 1);
        writer.start();
        reader.setDaemon(true);
        reader.start();
        try{
            writer.join();
            reader.interrupt();
        }catch (InterruptedException e){
            // Ignored
        }
    }
}